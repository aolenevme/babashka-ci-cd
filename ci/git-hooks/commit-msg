#!/usr/bin/env node

const fs = require("fs").promises;
const childProcessExec = require("child_process").exec;
const util = require("util");

const exec = util.promisify(childProcessExec);

const validCommitMsgRegex = /^(master|develop|((feat|release|hotfix)\/.+): .+)/;

function getCurrentBranchName() {
    return exec("git rev-parse --abbrev-ref HEAD");
}

async function printExplanation() {
    const currentBranchName = await getCurrentBranchName();

    console.log("Your commit message must begin with:\n");
    console.log(`${currentBranchName}: <description>\n`);
    console.log("\n");
}

async function checkCurrentCommitMsg() {
    const currentCommitMsg = await exec("cat $1");

    if (!validCommitMsgRegex.test(currentCommitMsg)) {
        await printExplanation();
        process.exit(1);
    }
}

async function checkCommitMsgHistory() {
    const currentBranchName = await getCurrentBranchName();

    await exec(`git log ${currentBranchName} --pretty=format:"%H" --not master > shas.txt`);

    const shas = await fs.readFile("./shas.txt");
    console.log(shas);
}

(async () => {
    await checkCurrentCommitMsg();
    // await checkCommitMsgHistory();
})();
