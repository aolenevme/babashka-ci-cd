#!/usr/bin/env node
const childProcessExec = require("child_process").exec;
const util = require("util");

const exec = util.promisify(childProcessExec);

async function validateBranchName() {
    const localBranch = await exec("git rev-parse --abbrev-ref HEAD");
    const validBranchRegex = new RegExp("^(master|develop|(feat|release|hotfix)\/[a-z0-9._-]+)$", "u");

    if (!validBranchRegex.test(localBranch.stdout.trim())) {
        const message = `Branch names in this project must adhere to this contract: ${validBranchRegex}.`;
        console.log(message);

        process.exit(1);
    }
}

async function formatClojureScript() {
    try {
        await exec("zprint-clj -i ./src/**/*.cljs -o ./");
        await exec("git add .");
    } catch {
        console.error("Failed to format the ClojureScript code");
        process.exit(1);
    }
}

async function lintJavaScript() {
    try {
        await exec("yarn lint:js");
        await exec("git add .");
    } catch {
        console.error("Failed to lint the JavaScript code");
        process.exit(1);
    }
}

(async () => {
    await validateBranchName();
    await formatClojureScript();
    await lintJavaScript();
})();
